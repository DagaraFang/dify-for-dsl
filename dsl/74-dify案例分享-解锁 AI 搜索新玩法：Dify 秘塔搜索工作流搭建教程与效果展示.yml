app:
  description: ÊµãËØïÊêúÁ¥¢ÂäüËÉΩ
  icon: ü§ñ
  icon_background: '#FFEAD5'
  mode: workflow
  name: 74-difyÊ°à‰æãÂàÜ‰∫´-Ëß£ÈîÅ AI ÊêúÁ¥¢Êñ∞Áé©Ê≥ïÔºöDify ÁßòÂ°îÊêúÁ¥¢Â∑•‰ΩúÊµÅÊê≠Âª∫ÊïôÁ®ã‰∏éÊïàÊûúÂ±ïÁ§∫
  use_icon_as_answer_icon: false
dependencies: []
kind: app
version: 0.3.0
workflow:
  conversation_variables: []
  environment_variables:
  - description: ''
    id: 4fad31ae-9252-48b0-948d-39a95e85ed88
    name: key
    selector:
    - env
    - key
    value: mk-xxxxxxxx
    value_type: string
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 500
        batch_count_limit: 10
        file_size_limit: 100
        image_file_size_limit: 100
        video_file_size_limit: 500
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInLoop: false
        sourceType: http-request
        targetType: code
      id: 1753787179392-source-17544110151730-target
      source: '1753787179392'
      sourceHandle: source
      target: '17544110151730'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17544110151730-source-1754620296021-target
      source: '17544110151730'
      sourceHandle: source
      target: '1754620296021'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: end
      id: 1754620296021-source-1754393041670-target
      source: '1754620296021'
      sourceHandle: source
      target: '1754393041670'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: start
        targetType: if-else
      id: 1753787119287-source-1754622942727-target
      source: '1753787119287'
      sourceHandle: source
      target: '1754622942727'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: http-request
      id: 1754622942727-true-1753787179392-target
      source: '1754622942727'
      sourceHandle: 'true'
      target: '1753787179392'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: http-request
      id: 1754622942727-0a92d901-7c99-47cf-8d24-5f4744106007-17546230718560-target
      source: '1754622942727'
      sourceHandle: 0a92d901-7c99-47cf-8d24-5f4744106007
      target: '17546230718560'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: http-request
        targetType: code
      id: 17546230718560-source-1754624654705-target
      source: '17546230718560'
      sourceHandle: source
      target: '1754624654705'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1754624654705-source-1754624726617-target
      source: '1754624654705'
      sourceHandle: source
      target: '1754624726617'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: end
      id: 1754624726617-source-1754625083596-target
      source: '1754624726617'
      sourceHandle: source
      target: '1754625083596'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: http-request
      id: 1754622942727-36c2b74f-42bc-4ed5-a81c-367d01e549bc-17546252819640-target
      source: '1754622942727'
      sourceHandle: 36c2b74f-42bc-4ed5-a81c-367d01e549bc
      target: '17546252819640'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: http-request
      id: 1754622942727-e9882a46-cbeb-46e3-9d87-43468f71237e-17546253244800-target
      source: '1754622942727'
      sourceHandle: e9882a46-cbeb-46e3-9d87-43468f71237e
      target: '17546253244800'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: http-request
      id: 1754622942727-2a7803b0-61f3-4c62-b3ce-e5c56a695a6b-17546253440350-target
      source: '1754622942727'
      sourceHandle: 2a7803b0-61f3-4c62-b3ce-e5c56a695a6b
      target: '17546253440350'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: http-request
      id: 1754622942727-15e66a86-77e4-4e57-a16d-aa6e9b40d571-17546253491010-target
      source: '1754622942727'
      sourceHandle: 15e66a86-77e4-4e57-a16d-aa6e9b40d571
      target: '17546253491010'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: http-request
      id: 1754622942727-false-1753787179392-target
      source: '1754622942727'
      sourceHandle: 'false'
      target: '1753787179392'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: http-request
        targetType: code
      id: 17546252819640-source-17546268421970-target
      source: '17546252819640'
      sourceHandle: source
      target: '17546268421970'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17546268421970-source-17546269080300-target
      source: '17546268421970'
      sourceHandle: source
      target: '17546269080300'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: end
      id: 17546269080300-source-1754640497461-target
      source: '17546269080300'
      sourceHandle: source
      target: '1754640497461'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: http-request
        targetType: code
      id: 17546253244800-source-1754640516327-target
      source: '17546253244800'
      sourceHandle: source
      target: '1754640516327'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1754640516327-source-1754641206148-target
      source: '1754640516327'
      sourceHandle: source
      target: '1754641206148'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: end
      id: 1754641206148-source-1754641782445-target
      source: '1754641206148'
      sourceHandle: source
      target: '1754641782445'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: http-request
        targetType: code
      id: 17546253440350-source-1754642078212-target
      source: '17546253440350'
      sourceHandle: source
      target: '1754642078212'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1754642078212-source-1754642999884-target
      source: '1754642078212'
      sourceHandle: source
      target: '1754642999884'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: http-request
        targetType: code
      id: 17546253491010-source-1754643102235-target
      source: '17546253491010'
      sourceHandle: source
      target: '1754643102235'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1754643102235-source-1754643106088-target
      source: '1754643102235'
      sourceHandle: source
      target: '1754643106088'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: end
      id: 1754642999884-source-1754644020839-target
      source: '1754642999884'
      sourceHandle: source
      target: '1754644020839'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: end
      id: 1754643106088-source-1754646053648-target
      source: '1754643106088'
      sourceHandle: source
      target: '1754646053648'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: ÂºÄÂßã
        type: start
        variables:
        - label: Êü•ËØ¢
          max_length: 99999999
          options: []
          required: true
          type: paragraph
          variable: q
        - label: ÊêúÁ¥¢ËåÉÂõ¥
          max_length: 99999
          options:
          - webpage
          - document
          - scholar
          - image
          - video
          - podcast
          required: true
          type: select
          variable: scope
        - label: ÁªìÊûúÊï∞Èáè
          max_length: 48
          options:
          - '10'
          - '20'
          - '30'
          - '40'
          - '50'
          required: true
          type: select
          variable: size
        - label: È°µÁ†Å
          max_length: 48
          options:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          required: false
          type: select
          variable: page
        - label: ËøîÂõûÁ≤æÁÆÄÁöÑÂéüÊñáÂåπÈÖç‰ø°ÊÅØ
          max_length: 48
          options:
          - 'false'
          - 'true'
          required: true
          type: select
          variable: includeSummary
        - label: ÈÄöËøáÁΩëÈ°µÁöÑÊëòË¶Å‰ø°ÊÅØËøõË°åÂè¨ÂõûÂ¢ûÂº∫
          max_length: 48
          options:
          - 'false'
          - 'true'
          required: true
          type: select
          variable: includeRawContent
        - label: ÊäìÂèñÊâÄÊúâÊù•Ê∫êÁΩëÈ°µÂéüÊñá
          max_length: 48
          options:
          - 'false'
          - 'true'
          required: true
          type: select
          variable: conciseSnippet
      height: 244
      id: '1753787119287'
      position:
        x: -1969.2948883631834
        y: -2266.674718080848
      positionAbsolute:
        x: -1969.2948883631834
        y: -2266.674718080848
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        authorization:
          config:
            api_key: mk-8C6A988ED61CAD222F8D1010724C5186
            type: basic
          type: no-auth
        body:
          data:
          - id: key-value-1948
            key: ''
            type: text
            value: "{\n  \"q\": \"{{#1753787119287.q#}}\",\n  \"scope\": \"{{#1753787119287.scope#}}\"\
              ,\n  \"includeSummary\": {{#1753787119287.includeSummary#}},\n  \"size\"\
              : \"{{#1753787119287.size#}}\",\n  \"includeRawContent\":{{#1753787119287.includeRawContent#}},\n\
              \  \"conciseSnippet\": {{#1753787119287.conciseSnippet#}}\n}"
          type: json
        desc: ''
        headers: 'Authorization:Bearer {{#env.key#}}

          Accept:application/json

          Content-Type:application/json'
        method: post
        params: ''
        retry_config:
          max_retries: 10
          retry_enabled: true
          retry_interval: '1000'
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: webÊêúÁ¥¢
        type: http-request
        url: https://metaso.cn/api/v1/search
        variables: []
      height: 138
      id: '1753787179392'
      position:
        x: -1043.4827699419955
        y: -2363.6914822273084
      positionAbsolute:
        x: -1043.4827699419955
        y: -2363.6914822273084
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1754620296021'
          - markdown
          variable: result
        selected: false
        title: webÊêúÁ¥¢ÁªìÊûú
        type: end
      height: 88
      id: '1754393041670'
      position:
        x: -161.26152365425855
        y: -2370.0817286592164
      positionAbsolute:
        x: -161.26152365425855
        y: -2370.0817286592164
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        code: "import json\n\ndef main(body: str) -> dict:\n    \"\"\"Ëß£ÊûêAPIÂìçÂ∫î‰ΩìÔºåÊèêÂèñÊâÄÈúÄÂ≠óÊÆµÔºàÂåÖÂê´ÈìæÊé•Ôºâ\"\
          \"\"\n    # Ëß£ÊûêJSONÂìçÂ∫î\n    parsed = json.loads(body)\n    \n    # ÊûÑÂª∫ÂÜÖÂÆπÂ≠óÂÖ∏\n\
          \    content = {\n        \"q\": parsed[\"searchParameters\"][\"q\"],\n\
          \        \"total\": parsed[\"total\"],\n        \"webpages\": []\n    }\n\
          \    \n    # Â§ÑÁêÜÊØè‰∏™ÁΩëÈ°µ\n    for item in parsed[\"webpages\"]:\n        page\
          \ = {\n            \"title\": item[\"title\"],\n            \"link\": item[\"\
          link\"],  # Ê∑ªÂä†ÈìæÊé•Â≠óÊÆµ\n            \"snippet\": item[\"snippet\"],\n      \
          \      \"position\": item[\"position\"],\n            \"date\": item[\"\
          date\"],\n            \"authors\": item.get(\"authors\", [])  # ÂÆâÂÖ®Â§ÑÁêÜÁº∫Â§±ÁöÑÂ≠óÊÆµ\n\
          \        }\n        content[\"webpages\"].append(page)\n    \n    # Â∞ÜËæìÂá∫ÂèòÈáèÂêçÊîπ‰∏∫\
          \ input_data\n    return {\"input_data\": content}"
        code_language: python3
        desc: ''
        outputs:
          input_data:
            children: null
            type: object
        selected: false
        title: ÁªìÊûúËß£Êûê
        type: code
        variables:
        - value_selector:
          - '1753787179392'
          - body
          variable: body
      height: 52
      id: '17544110151730'
      position:
        x: -740.424934191988
        y: -2363.6914822273084
      positionAbsolute:
        x: -740.424934191988
        y: -2363.6914822273084
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        code: "import json\n\ndef main(input_data):\n    # Ê£ÄÊü•ÊúâÊïàÊï∞ÊçÆÊòØÂê¶Â≠òÂú®ÔºàÁõ¥Êé•Ê£ÄÊü•input_data‰∏≠ÁöÑÂÖ≥ÈîÆÂ≠óÊÆµÔºâ\n\
          \    if not input_data or not input_data.get(\"webpages\"):\n        return\
          \ {\"markdown\": \"## Êú™ÊâæÂà∞ÊúâÊïàÊï∞ÊçÆ\"}\n    \n    # Áõ¥Êé•‰ΩøÁî®input_data‰Ωú‰∏∫Êï∞ÊçÆÊ∫ê\n    data\
          \ = input_data\n    markdown = f\"## ÊêúÁ¥¢ÁªìÊûúÔºö{data['q']}\\n\\n\"\n    markdown\
          \ += f\"ÊâæÂà∞ **{data['total']}** Êù°Áõ∏ÂÖ≥ÁªìÊûú\\n\\n---\\n\\n\"\n    \n    # Â§ÑÁêÜÊØè‰∏™ÊêúÁ¥¢ÁªìÊûúÈ°π\n\
          \    for item in data[\"webpages\"]:\n        markdown += f\"### [{item['title']}]({item['link']})\\\
          n\"\n        markdown += f\"- **Êó•Êúü**: {item['date']}\\n\"\n        \n  \
          \      if item.get(\"authors\"):\n            markdown += f\"- **‰ΩúËÄÖ**: {',\
          \ '.join(item['authors'])}\\n\"\n        \n        # Ê∏ÖÁêÜÊëòË¶ÅÂπ∂Êà™Êñ≠\n        snippet\
          \ = item['snippet'].replace('\\n', ' ').replace('![]', '')\n        markdown\
          \ += f\"- **ÊëòË¶Å**: {snippet[:240]}{'...' if len(snippet) > 240 else ''}\\\
          n\\n\"\n    \n    return {\"markdown\": markdown}"
        code_language: python3
        desc: ''
        outputs:
          markdown:
            children: null
            type: string
        selected: false
        title: josnËΩ¨md
        type: code
        variables:
        - value_selector:
          - '17544110151730'
          - input_data
          variable: input_data
      height: 52
      id: '1754620296021'
      position:
        x: -448.6412957816585
        y: -2370.0817286592164
      positionAbsolute:
        x: -448.6412957816585
        y: -2370.0817286592164
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: is
            id: cabe017f-4efa-4226-bcea-b3d028803928
            value: webpage
            varType: string
            variable_selector:
            - '1753787119287'
            - scope
          id: 'true'
          logical_operator: and
        - case_id: 0a92d901-7c99-47cf-8d24-5f4744106007
          conditions:
          - comparison_operator: is
            id: e7bdd788-8909-4c39-b7d0-c9abce2aa144
            value: document
            varType: string
            variable_selector:
            - '1753787119287'
            - scope
          id: 0a92d901-7c99-47cf-8d24-5f4744106007
          logical_operator: and
        - case_id: 36c2b74f-42bc-4ed5-a81c-367d01e549bc
          conditions:
          - comparison_operator: is
            id: 1a265767-00ef-471c-b19e-deb0237261d0
            value: scholar
            varType: string
            variable_selector:
            - '1753787119287'
            - scope
          id: 36c2b74f-42bc-4ed5-a81c-367d01e549bc
          logical_operator: and
        - case_id: e9882a46-cbeb-46e3-9d87-43468f71237e
          conditions:
          - comparison_operator: is
            id: e3508cd4-f433-43e7-a5e2-9ae33ea0e2d6
            value: image
            varType: string
            variable_selector:
            - '1753787119287'
            - scope
          id: e9882a46-cbeb-46e3-9d87-43468f71237e
          logical_operator: and
        - case_id: 2a7803b0-61f3-4c62-b3ce-e5c56a695a6b
          conditions:
          - comparison_operator: is
            id: 3d57bda2-8017-423a-8c1e-95b6b1525904
            value: video
            varType: string
            variable_selector:
            - '1753787119287'
            - scope
          id: 2a7803b0-61f3-4c62-b3ce-e5c56a695a6b
          logical_operator: and
        - case_id: 15e66a86-77e4-4e57-a16d-aa6e9b40d571
          conditions:
          - comparison_operator: is
            id: fb95f3a4-21c7-4d94-8a9b-e078b6b1a75f
            value: podcast
            varType: string
            variable_selector:
            - '1753787119287'
            - scope
          id: 15e66a86-77e4-4e57-a16d-aa6e9b40d571
          logical_operator: and
        desc: ''
        selected: false
        title: Êù°‰ª∂ÂàÜÊîØ
        type: if-else
      height: 364
      id: '1754622942727'
      position:
        x: -1482.1593731284768
        y: -2266.674718080848
      positionAbsolute:
        x: -1482.1593731284768
        y: -2266.674718080848
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        authorization:
          config:
            api_key: mk-8C6A988ED61CAD222F8D1010724C5186
            type: basic
          type: no-auth
        body:
          data:
          - id: key-value-1948
            key: ''
            type: text
            value: "{\n  \"q\": \"{{#1753787119287.q#}}\",\n  \"scope\": \"{{#1753787119287.scope#}}\"\
              ,\n  \"includeSummary\": {{#1753787119287.includeSummary#}},\n  \"size\"\
              : \"{{#1753787119287.size#}}\",\n  \"includeRawContent\":{{#1753787119287.includeRawContent#}},\n\
              \  \"conciseSnippet\": {{#1753787119287.conciseSnippet#}}\n}"
          type: json
        desc: ''
        headers: 'Authorization:Bearer {{#env.key#}}

          Accept:application/json

          Content-Type:application/json'
        method: post
        params: ''
        retry_config:
          max_retries: 10
          retry_enabled: true
          retry_interval: '1000'
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: ÊñáÂ∫ìÊêúÁ¥¢
        type: http-request
        url: https://metaso.cn/api/v1/search
        variables: []
      height: 138
      id: '17546230718560'
      position:
        x: -1043.4827699419955
        y: -2188.7128052106555
      positionAbsolute:
        x: -1043.4827699419955
        y: -2188.7128052106555
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        code: "import json\n\ndef main(body: str) -> dict:\n    \"\"\"Ëß£ÊûêJSONËæìÂÖ•ÔºåÊèêÂèñÊåáÂÆöÂ≠óÊÆµÔºàËæìÂÖ•ÂèòÈáèÔºöbodyÔºåËæìÂá∫ÂèòÈáèÔºöinput_dataÔºâ\"\
          \"\"\n    try:\n        # Ëß£ÊûêËæìÂÖ•JSONÂ≠óÁ¨¶‰∏≤\n        data = json.loads(body)\n\
          \        \n        # ÊèêÂèñÊêúÁ¥¢ÂÖ≥ÈîÆËØçÔºàqÔºâ\n        q_value = data.get(\"searchParameters\"\
          , {}).get(\"q\", \"\")\n        \n        # ÊèêÂèñÊñáÊ°£ÂàóË°®\n        documents_list\
          \ = []\n        for doc in data.get(\"documents\", []):\n            doc_info\
          \ = {\n                \"title\": doc.get(\"title\", \"\"),\n          \
          \      \"link\": doc.get(\"link\", \"\"),\n                \"score\": doc.get(\"\
          score\", \"\"),\n                \"snippet\": doc.get(\"snippet\", \"\"\
          ),\n                \"position\": doc.get(\"position\", \"\"),\n       \
          \         \"authors\": doc.get(\"authors\", [])  # ÂÆâÂÖ®Ëé∑Âèñ‰ΩúËÄÖÂàóË°®\n          \
          \  }\n            documents_list.append(doc_info)\n        \n        # ÊûÑÂª∫ËæìÂá∫ÁªìÊûÑ\n\
          \        result = {\n            \"q\": q_value,\n            \"documents\"\
          : documents_list,\n            \"total\": data.get(\"total\", 0)\n     \
          \   }\n        \n        # ËøîÂõûÊåáÂÆöËæìÂá∫ÂèòÈáèÂêç\n        return {\"input_data\": result}\n\
          \    \n    except Exception as e:\n        return {\n            \"error\"\
          : f\"JSONËß£ÊûêÂ§±Ë¥•: {str(e)}\",\n            \"input_data\": None\n        }"
        code_language: python3
        desc: ''
        outputs:
          input_data:
            children: null
            type: object
        selected: false
        title: ÁªìÊûúËß£Êûê
        type: code
        variables:
        - value_selector:
          - '17546230718560'
          - body
          variable: body
      height: 52
      id: '1754624654705'
      position:
        x: -740.424934191988
        y: -2188.7128052106555
      positionAbsolute:
        x: -740.424934191988
        y: -2188.7128052106555
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        code: "import json\n\ndef main(input_data):\n    # ÊèêÂèñÊü•ËØ¢ËØçÂíåÊñáÊ°£ÂàóË°®\n    query =\
          \ input_data[\"q\"]\n    total = input_data[\"total\"]\n    documents =\
          \ input_data[\"documents\"]\n    \n    # ÊûÑÂª∫MarkdownÂ§¥ÈÉ®\n    markdown = f\"\
          ## ÊêúÁ¥¢ÁªìÊûúÔºö{query}\\n\\n\"\n    markdown += f\"ÊâæÂà∞ **{total}** Êù°Áõ∏ÂÖ≥ÁªìÊûú\\n\\n---\\\
          n\\n\"\n    \n    # Â§ÑÁêÜÊØè‰∏™ÊêúÁ¥¢ÁªìÊûú\n    for doc in documents:\n        markdown\
          \ += f\"### {doc['position']}. [{doc['title']}]({doc['link']})\\n\"\n  \
          \      \n        if doc.get(\"authors\"):\n            markdown += f\"-\
          \ **‰ΩúËÄÖ**: {', '.join(doc['authors'])}\\n\"\n        \n        # Ê∏ÖÁêÜÊëòË¶ÅÂπ∂Êà™Êñ≠\n\
          \        snippet = doc['snippet']\n        # ÁßªÈô§ÂõæÁâáÊ†áËÆ∞\n        snippet = snippet.replace('![]',\
          \ '').replace('![](', '')\n        # ÁßªÈô§ÁâπÊÆäÂ≠óÁ¨¶ÂíåÂ§ö‰ΩôÁ©∫Ê†º\n        snippet = ' '.join(snippet.split())\n\
          \        # Êà™Êñ≠ÊëòË¶Å\n        markdown += f\"- **ÊëòË¶Å**: {snippet[:220]}{'...'\
          \ if len(snippet) > 220 else ''}\\n\\n\"\n    \n    return {\"markdown\"\
          : markdown}\n\n# Á§∫‰æãË∞ÉÁî®ÔºàÂÆûÈôÖÂú®Â∑•‰ΩúÊµÅ‰∏≠‰ºöËá™Âä®‰º†ÂÖ•input_dataÔºâ\nif __name__ == \"__main__\"\
          :\n    # ËøôÈáå‰ªÖÁî®‰∫éÊú¨Âú∞ÊµãËØïÔºåÂú®Â∑•‰ΩúÊµÅ‰∏≠‰ºöË¢´Ë¶ÜÁõñ\n    test_data = {\n        \"input_data\"\
          : {\n            \"q\": \"ÊµãËØïÊü•ËØ¢\",\n            \"documents\": [{\n     \
          \           \"title\": \"ÊµãËØïÊ†áÈ¢ò\",\n                \"link\": \"https://example.com\"\
          ,\n                \"snippet\": \"ÊµãËØïÊëòË¶ÅÂÜÖÂÆπ\",\n                \"position\"\
          : 1,\n                \"authors\": [\"ÊµãËØï‰ΩúËÄÖ\"]\n            }],\n       \
          \     \"total\": 1\n        }\n    }\n    result = main(test_data[\"input_data\"\
          ])\n    print(result[\"markdown\"])"
        code_language: python3
        desc: ''
        outputs:
          markdown:
            children: null
            type: string
        selected: false
        title: josnËΩ¨md
        type: code
        variables:
        - value_selector:
          - '1754624654705'
          - input_data
          variable: input_data
      height: 52
      id: '1754624726617'
      position:
        x: -448.6412957816585
        y: -2180.994730037335
      positionAbsolute:
        x: -448.6412957816585
        y: -2180.994730037335
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1754624726617'
          - markdown
          variable: markdown
        selected: false
        title: ÊñáÂ∫ìÊêúÁ¥¢ÁªìÊûú
        type: end
      height: 88
      id: '1754625083596'
      position:
        x: -153.8062361503661
        y: -2180.994730037335
      positionAbsolute:
        x: -153.8062361503661
        y: -2180.994730037335
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        authorization:
          config:
            api_key: mk-8C6A988ED61CAD222F8D1010724C5186
            type: basic
          type: no-auth
        body:
          data:
          - id: key-value-1948
            key: ''
            type: text
            value: "{\n  \"q\": \"{{#1753787119287.q#}}\",\n  \"scope\": \"{{#1753787119287.scope#}}\"\
              ,\n  \"includeSummary\": {{#1753787119287.includeSummary#}},\n  \"size\"\
              : \"{{#1753787119287.size#}}\",\n  \"includeRawContent\":{{#1753787119287.includeRawContent#}},\n\
              \  \"conciseSnippet\": {{#1753787119287.conciseSnippet#}}\n}"
          type: json
        desc: ''
        headers: 'Authorization:Bearer {{#env.key#}}

          Accept:application/json

          Content-Type:application/json'
        method: post
        params: ''
        retry_config:
          max_retries: 10
          retry_enabled: true
          retry_interval: '1000'
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: Â≠¶ÊúØÊêúÁ¥¢
        type: http-request
        url: https://metaso.cn/api/v1/search
        variables: []
      height: 138
      id: '17546252819640'
      position:
        x: -1043.4827699419955
        y: -2021.559387481035
      positionAbsolute:
        x: -1043.4827699419955
        y: -2021.559387481035
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        authorization:
          config:
            api_key: mk-8C6A988ED61CAD222F8D1010724C5186
            type: basic
          type: no-auth
        body:
          data:
          - id: key-value-1948
            key: ''
            type: text
            value: "{\n  \"q\": \"{{#1753787119287.q#}}\",\n  \"scope\": \"{{#1753787119287.scope#}}\"\
              ,\n  \"includeSummary\": {{#1753787119287.includeSummary#}},\n  \"size\"\
              : \"{{#1753787119287.size#}}\",\n  \"includeRawContent\":{{#1753787119287.includeRawContent#}},\n\
              \  \"conciseSnippet\": {{#1753787119287.conciseSnippet#}}\n}"
          type: json
        desc: ''
        headers: 'Authorization:Bearer {{#env.key#}}

          Accept:application/json

          Content-Type:application/json'
        method: post
        params: ''
        retry_config:
          max_retries: 10
          retry_enabled: true
          retry_interval: '1000'
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: ÂõæÁâáÊêúÁ¥¢
        type: http-request
        url: https://metaso.cn/api/v1/search
        variables: []
      height: 138
      id: '17546253244800'
      position:
        x: -1043.4827699419955
        y: -1853.3458238072835
      positionAbsolute:
        x: -1043.4827699419955
        y: -1853.3458238072835
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        authorization:
          config:
            api_key: mk-8C6A988ED61CAD222F8D1010724C5186
            type: basic
          type: no-auth
        body:
          data:
          - id: key-value-1948
            key: ''
            type: text
            value: "{\n  \"q\": \"{{#1753787119287.q#}}\",\n  \"scope\": \"{{#1753787119287.scope#}}\"\
              ,\n  \"includeSummary\": {{#1753787119287.includeSummary#}},\n  \"size\"\
              : \"{{#1753787119287.size#}}\",\n  \"includeRawContent\":{{#1753787119287.includeRawContent#}},\n\
              \  \"conciseSnippet\": {{#1753787119287.conciseSnippet#}}\n}"
          type: json
        desc: ''
        headers: 'Authorization:Bearer {{#env.key#}}

          Accept:application/json

          Content-Type:application/json'
        method: post
        params: ''
        retry_config:
          max_retries: 10
          retry_enabled: true
          retry_interval: '1000'
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: ËßÜÈ¢ëÊêúÁ¥¢
        type: http-request
        url: https://metaso.cn/api/v1/search
        variables: []
      height: 138
      id: '17546253440350'
      position:
        x: -1043.4827699419955
        y: -1693.41666008938
      positionAbsolute:
        x: -1043.4827699419955
        y: -1693.41666008938
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        authorization:
          config:
            api_key: mk-8C6A988ED61CAD222F8D1010724C5186
            type: basic
          type: no-auth
        body:
          data:
          - id: key-value-1948
            key: ''
            type: text
            value: "{\n  \"q\": \"{{#1753787119287.q#}}\",\n  \"scope\": \"{{#1753787119287.scope#}}\"\
              ,\n  \"includeSummary\": {{#1753787119287.includeSummary#}},\n  \"size\"\
              : \"{{#1753787119287.size#}}\",\n  \"includeRawContent\":{{#1753787119287.includeRawContent#}},\n\
              \  \"conciseSnippet\": {{#1753787119287.conciseSnippet#}}\n}"
          type: json
        desc: ''
        headers: 'Authorization:Bearer {{#env.key#}}

          Accept:application/json

          Content-Type:application/json'
        method: post
        params: ''
        retry_config:
          max_retries: 10
          retry_enabled: true
          retry_interval: '1000'
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: ÂçöÂÆ¢ÊêúÁ¥¢
        type: http-request
        url: https://metaso.cn/api/v1/search
        variables: []
      height: 138
      id: '17546253491010'
      position:
        x: -1043.4827699419955
        y: -1514.2286015845405
      positionAbsolute:
        x: -1043.4827699419955
        y: -1514.2286015845405
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        code: "import json\n\ndef main(body: str) -> dict:\n    \"\"\"Ëß£Êûê JSON ËæìÂÖ•ÔºåÊèêÂèñÊåáÂÆöÂ≠óÊÆµÔºàËæìÂÖ•ÂèòÈáèÔºöbodyÔºåËæìÂá∫ÂèòÈáèÔºöinput_dataÔºâ\"\
          \"\"\n    try:\n        data = json.loads(body)\n        \n        # ÂÆâÂÖ®ÊèêÂèñÊêúÁ¥¢ÂèÇÊï∞ÔºàÂ§öÂ±ÇÂµåÂ•óÈÅøÂÖç\
          \ KeyErrorÔºâ\n        search_params = data.get(\"searchParameters\", {})\n\
          \        q_value = search_params.get(\"q\", \"\")\n        \n        # Â§ÑÁêÜÊñáÊ°£ÂàóË°®ÔºàÂê´Á©∫ÂÄº‰øùÊä§ÂíåÁ±ªÂûãËΩ¨Êç¢Ôºâ\n\
          \        documents_list = []\n        for doc in data.get(\"scholars\",\
          \ []):  # Ê≥®ÊÑèÂ≠óÊÆµÂêçÈúÄ‰∏éÂÆûÈôÖÂåπÈÖç\n            # Áªü‰∏ÄÂ§ÑÁêÜÁº∫Â§±Â≠óÊÆµÔºåÈÅøÂÖçÂêéÁª≠ÊµÅÁ®ã‰∏≠Êñ≠\n            doc_info\
          \ = {\n                \"title\": doc.get(\"title\", \"Êó†Ê†áÈ¢ò\"),\n       \
          \         \"link\": doc.get(\"link\", \"#\"),\n                \"score\"\
          : str(doc.get(\"score\", \"N/A\")),  # Á°Æ‰øùÂ≠óÁ¨¶‰∏≤Á±ªÂûã\n                \"position\"\
          : int(doc.get(\"position\", 0)),  # ËΩ¨Êç¢‰∏∫Êï∞ÂÄº\n                \"date\": doc.get(\"\
          date\", \"\"),\n                \"authors\": doc.get(\"authors\", []), \
          \ # ÈªòËÆ§Á©∫ÂàóË°®\n                \"snippet\": doc.get(\"snippet\", \"\")[:500]\
          \  # Êà™Êñ≠ÈïøÊñáÊú¨\n            }\n            documents_list.append(doc_info)\n\
          \        \n        # ÊûÑÂª∫ÁªìÊûÑÂåñËæìÂá∫ÔºàÂÖºÂÆπÂºÇÂ∏∏ÂàÜÊîØÔºâ\n        return {\n            \"input_data\"\
          : {  # ËæìÂá∫ÂèòÈáèÂêçÂøÖÈ°ª‰∏éÂ∑•‰ΩúÊµÅÂÆö‰πâ‰∏ÄËá¥\n                \"q\": q_value,\n              \
          \  \"documents\": documents_list,\n                \"total\": int(data.get(\"\
          total\", 0))  # Á±ªÂûãËΩ¨Êç¢\n            }\n        }\n    \n    except json.JSONDecodeError\
          \ as e:\n        return {\"error\": f\"JSON Ê†ºÂºèÈîôËØØ: {str(e)}\"}\n    except\
          \ KeyError as e:\n        return {\"error\": f\"Áº∫Â§±ÂÖ≥ÈîÆÂ≠óÊÆµ: {str(e)}\"}\n  \
          \  except Exception as e:\n        return {\"error\": f\"Ëß£ÊûêÂ§±Ë¥•: {str(e)}\"\
          }"
        code_language: python3
        desc: ''
        outputs:
          input_data:
            children: null
            type: object
        selected: false
        title: ÁªìÊûúËß£Êûê
        type: code
        variables:
        - value_selector:
          - '17546230718560'
          - body
          variable: body
      height: 52
      id: '17546268421970'
      position:
        x: -746.9582289732159
        y: -2015.9061946143147
      positionAbsolute:
        x: -746.9582289732159
        y: -2015.9061946143147
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        code: "import logging\n\n# ÈÖçÁΩÆÊó•Âøó\nlogging.basicConfig(level=logging.INFO)\n\
          logger = logging.getLogger(__name__)\n\ndef main(input_data):\n    # 1.\
          \ È™åËØÅËæìÂÖ•Êï∞ÊçÆÊòØÂê¶Â≠òÂú®\n    if not input_data:\n        logger.error(\"ËæìÂÖ•Êï∞ÊçÆ‰∏∫Á©∫ÔºÅ\")\n\
          \        input_data = {\"q\": \"ÈªòËÆ§ÊêúÁ¥¢ËØç\", \"documents\": []}  # Êèê‰æõÈªòËÆ§Êï∞ÊçÆ\n\
          \    \n    # 2. ÊèêÂèñÂøÖË¶ÅÂ≠óÊÆµÔºàÂ∏¶ÈªòËÆ§ÂÄºÔºâ\n    query = input_data.get(\"q\", \"\")\n\
          \    documents = input_data.get(\"documents\", [])\n    \n    # 3. Â§ÑÁêÜÈÄªËæëÔºàÁ§∫‰æãÔºöÁîüÊàê\
          \ Markdown ÁªìÊûúÔºâ\n    markdown_output = f\"## ÊêúÁ¥¢ÁªìÊûú\\n- **ÂÖ≥ÈîÆËØç**: {query}\\\
          n\\n\"\n    for doc in documents:\n        title = doc.get(\"title\", \"\
          Êó†Ê†áÈ¢ò\")\n        link = doc.get(\"link\", \"#\")\n        markdown_output\
          \ += f\"- [{title}]({link})\\n\"\n    \n    return {\"markdown\": markdown_output}\n\
          \n# Ë∞ÉÁî®ÂÖ•Âè£ÔºàDify Ëá™Âä®‰º†ÂÖ• input_dataÔºâ\nif 'input_data' in locals():\n    result\
          \ = main(input_data)\nelse:\n    result = {\"error\": \"ËæìÂÖ•Êï∞ÊçÆÊú™ÂÆö‰πâ\"}"
        code_language: python3
        desc: ''
        outputs:
          markdown:
            children: null
            type: string
        selected: false
        title: josnËΩ¨md
        type: code
        variables:
        - value_selector:
          - '17546268421970'
          - input_data
          variable: input_data
      height: 52
      id: '17546269080300'
      position:
        x: -436.424934191988
        y: -2021.559387481035
      positionAbsolute:
        x: -436.424934191988
        y: -2021.559387481035
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '17546269080300'
          - markdown
          variable: markdown
        selected: false
        title: Â≠¶ÊúØÊêúÁ¥¢ÁªìÊûú
        type: end
      height: 88
      id: '1754640497461'
      position:
        x: -153.8062361503661
        y: -2026.3917451662537
      positionAbsolute:
        x: -153.8062361503661
        y: -2026.3917451662537
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        code: "import json\n\ndef main(body: str) -> dict:\n    \"\"\"Ëß£ÊûêAPIÂìçÂ∫î‰ΩìÔºåÊèêÂèñÊâÄÈúÄÂ≠óÊÆµÔºàÂê´ÂõæÁâá‰ø°ÊÅØÔºâ\"\
          \"\"\n    # Ëß£ÊûêJSONÂìçÂ∫î\n    parsed = json.loads(body)\n    \n    # ÊûÑÂª∫ÂÜÖÂÆπÂ≠óÂÖ∏\n\
          \    content = {\n        \"q\": parsed[\"searchParameters\"][\"q\"],\n\
          \        \"total\": parsed[\"total\"],\n        \"images\": []\n    }\n\
          \    \n    # ÈÅçÂéÜÊØè‰∏™ÂõæÁâáÊù°ÁõÆ\n    for image in parsed[\"images\"]:\n        img_data\
          \ = {\n            \"title\": image[\"title\"],\n            \"score\":\
          \ image[\"score\"],\n            \"position\": image[\"position\"],\n  \
          \          \"imageUrl\": image[\"imageUrl\"]\n        }\n        content[\"\
          images\"].append(img_data)\n    \n    # ËøîÂõûÁªü‰∏ÄÂëΩÂêçÁöÑËæìÂá∫ÂèòÈáè\n    return {\"input_data\"\
          : content}"
        code_language: python3
        desc: ''
        outputs:
          input_data:
            children: null
            type: object
        selected: false
        title: ÁªìÊûúËß£Êûê
        type: code
        variables:
        - value_selector:
          - '17546253244800'
          - body
          variable: body
      height: 52
      id: '1754640516327'
      position:
        x: -740.424934191988
        y: -1853.3458238072835
      positionAbsolute:
        x: -740.424934191988
        y: -1853.3458238072835
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        code: "import json\n\ndef main(input_data: dict) -> dict:\n    \"\"\"Â∞ÜÂõæÁâáÊêúÁ¥¢ÁªìÊûúJSONËΩ¨Êç¢‰∏∫MarkdownÊ†ºÂºè\"\
          \"\"\n    # Ê£ÄÊü•ÊúâÊïàÊï∞ÊçÆÊòØÂê¶Â≠òÂú®\n    if not input_data or not input_data.get(\"images\"\
          ):\n        return {\"markdown\": \"## Êú™ÊâæÂà∞ÊúâÊïàÂõæÁâáÊï∞ÊçÆ\"}\n    \n    # ÊèêÂèñÊ†∏ÂøÉÊï∞ÊçÆ\n\
          \    q = input_data.get(\"q\", \"Êú™Áü•ÊêúÁ¥¢\")\n    total = input_data.get(\"\
          total\", 0)\n    images = input_data[\"images\"]\n    \n    # ÊûÑÂª∫Âü∫Á°ÄMDÁªìÊûÑ\n\
          \    markdown = f\"# \U0001F50D ÂõæÁâáÊêúÁ¥¢ÁªìÊûú: {q}\\n\\n\"\n    markdown += f\"\
          **ÊâæÂà∞ {total} Êù°ÁªìÊûúÔºåÊòæÁ§∫Ââç {len(images)} Âº†ÂõæÁâá**\\n\\n\"\n    \n    # Ê∑ªÂä†ÂõæÁâá‰ø°ÊÅØË°®\n\
          \    markdown += \"## \U0001F4F8 ÂõæÁâáÂàóË°®\\n\"\n    markdown += \"| ‰ΩçÁΩÆ | ËØÑÂàÜ\
          \ | Ê†áÈ¢ò | È¢ÑËßà |\\n\"\n    markdown += \"|------|------|------|------|\\n\"\
          \n    \n    for img in images:\n        # ÁÆÄÂåñÊ†áÈ¢òÔºàÁßªÈô§Â§ö‰ΩôÁ¨¶Âè∑Ôºâ\n        title =\
          \ img[\"title\"].split('|')[0].split('_')[0].strip()\n        # ÂàõÂª∫ÂõæÁâáÈ¢ÑËßàÔºàÈôêÂà∂È´òÂ∫¶Ôºâ\n\
          \        preview = f\"<img src='{img['imageUrl']}' height=100>\"\n     \
          \   # Ê∑ªÂä†Ë°®Ê†ºË°å\n        markdown += f\"| {img['position']} | {img['score']}\
          \ | {title} | {preview} |\\n\"\n    \n    return {\"markdown\": markdown}"
        code_language: python3
        desc: ''
        outputs:
          markdown:
            children: null
            type: string
        selected: false
        title: josnËΩ¨md
        type: code
        variables:
        - value_selector:
          - '1754640516327'
          - input_data
          variable: input_data
      height: 52
      id: '1754641206148'
      position:
        x: -436.424934191988
        y: -1853.3458238072835
      positionAbsolute:
        x: -436.424934191988
        y: -1853.3458238072835
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1754641206148'
          - markdown
          variable: markdown
        selected: false
        title: ÂõæÁâáÊêúÁ¥¢ÁªìÊûú
        type: end
      height: 88
      id: '1754641782445'
      position:
        x: -153.8062361503661
        y: -1859.386270913807
      positionAbsolute:
        x: -153.8062361503661
        y: -1859.386270913807
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        code: "import json\n\ndef main(body: str) -> dict:\n    \"\"\"\n    Ëß£ÊûêËßÜÈ¢ëÊêúÁ¥¢ÁªìÊûúJSONÔºåÊèêÂèñÁªìÊûÑÂåñÂ≠óÊÆµ\n\
          \    ËæìÂÖ•: ÂåÖÂê´ËßÜÈ¢ëÊêúÁ¥¢ÁªìÊûúÁöÑJSONÂ≠óÁ¨¶‰∏≤\n    ËæìÂá∫: ÂåÖÂê´qÂíåvideosÂàóË°®ÁöÑÂ≠óÂÖ∏\n    \"\"\"\n    # Ëß£ÊûêJSONÂìçÂ∫î\n\
          \    data = json.loads(body)\n    \n    # ÊûÑÂª∫ÁªìÊûúÂ≠óÂÖ∏\n    result = {\n     \
          \   \"q\": data[\"searchParameters\"][\"q\"],  # ÊèêÂèñÊêúÁ¥¢ÂÖ≥ÈîÆËØç\n        \"videos\"\
          : []  # Áî®‰∫éÂ≠òÂÇ®ËßÜÈ¢ë‰ø°ÊÅØÁöÑÂàóË°®\n    }\n    \n    # ÈÅçÂéÜÊØè‰∏™ËßÜÈ¢ëÊù°ÁõÆ\n    for video in data[\"\
          videos\"]:\n        # ÊèêÂèñÊåáÂÆöÂ≠óÊÆµ\n        video_data = {\n            \"position\"\
          : video[\"position\"],\n            \"title\": video[\"title\"],\n     \
          \       \"link\": video[\"link\"],\n            \"score\": video[\"score\"\
          ],\n            \"snippet\": video[\"snippet\"],\n            \"authors\"\
          : video[\"authors\"],\n            \"date\": video[\"date\"],\n        \
          \    \"duration\": video[\"duration\"],\n            \"coverImage\": video[\"\
          coverImage\"]\n        }\n        result[\"videos\"].append(video_data)\n\
          \    \n    # ËøîÂõûÂèòÈáèÂêç‰∏∫ input_data ÁöÑËæìÂá∫\n    return {\"input_data\": result}\
          \  # Â∑≤‰øÆÊîπÂèòÈáèÂêç"
        code_language: python3
        desc: ''
        outputs:
          input_data:
            children: null
            type: object
        selected: false
        title: ÁªìÊûúËß£Êûê
        type: code
        variables:
        - value_selector:
          - '17546253440350'
          - body
          variable: body
      height: 52
      id: '1754642078212'
      position:
        x: -740.424934191988
        y: -1693.41666008938
      positionAbsolute:
        x: -740.424934191988
        y: -1693.41666008938
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        code: "import json\n\ndef main(input_data: dict) -> dict:\n    \"\"\"\n  \
          \  Â∞ÜËßÜÈ¢ëÊêúÁ¥¢ÁªìÊûúJSONËΩ¨Êç¢‰∏∫ÈùûË°®Ê†ºMarkdownÊ†ºÂºè\n    ËæìÂÖ•: ÂåÖÂê´ËßÜÈ¢ëÊêúÁ¥¢ÁªìÊûúÁöÑÂ≠óÂÖ∏ÂØπË±°\n    ËæìÂá∫: MarkdownÊ†ºÂºèÁöÑÂÜÖÂÆπÔºàÂèòÈáèÂêçÔºömarkdownÔºâ\n\
          \    \"\"\"\n    # Áõ¥Êé•‰ΩøÁî® input_data Â≠óÂÖ∏\n    videos = input_data[\"videos\"\
          ]\n    \n    # ÊûÑÂª∫MarkdownÂÜÖÂÆπ\n    md_content = f\"## \U0001F50D ÊêúÁ¥¢ËØç: {input_data['q']}\\\
          n\\n\"\n    \n    # ÈÅçÂéÜÊØè‰∏™ËßÜÈ¢ëÊù°ÁõÆ\n    for video in videos:\n        # Â§ÑÁêÜ‰ΩúËÄÖ‰ø°ÊÅØ\n\
          \        author = video[\"authors\"][0] if video[\"authors\"] else \"Êú™Áü•\"\
          \n        \n        # Â§ÑÁêÜÊëòË¶ÅÔºàÊà™ÂèñÂâç50Â≠óÁ¨¶Ôºâ\n        snippet = video[\"snippet\"\
          ].replace(\"\\n\", \" \").strip()\n        snippet_short = snippet[:50]\
          \ + \"...\" if len(snippet) > 50 else snippet\n        \n        # Ê∑ªÂä†ËßÜÈ¢ëÊù°ÁõÆ\n\
          \        md_content += f\"### \U0001F4FA {video['position']}. [{video['title']}]({video['link']})\\\
          n\"\n        md_content += f\"- **‰ΩúËÄÖ**: {author}\\n\"\n        md_content\
          \ += f\"- **ÂèëÂ∏ÉÊó•Êúü**: {video['date']}\\n\"\n        md_content += f\"- **ËßÜÈ¢ëÊó∂Èïø**:\
          \ {video['duration']}Áßí\\n\"\n        md_content += f\"- **ÊëòË¶Å**: {snippet_short}\\\
          n\"\n        md_content += f\"- **Â∞ÅÈù¢**: [Êü•ÁúãÂõæÁâá]({video['coverImage']})\\\
          n\\n\"\n    \n    # ËøîÂõûMarkdownÁªìÊûú\n    return {\"markdown\": md_content}"
        code_language: python3
        desc: ''
        outputs:
          markdown:
            children: null
            type: string
        selected: false
        title: josnËΩ¨md
        type: code
        variables:
        - value_selector:
          - '1754642078212'
          - input_data
          variable: input_data
      height: 52
      id: '1754642999884'
      position:
        x: -436.424934191988
        y: -1693.41666008938
      positionAbsolute:
        x: -436.424934191988
        y: -1693.41666008938
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        code: "import json\n\ndef main(body: str) -> dict:\n    \"\"\"\n    Ëß£ÊûêDifyÂ∑•‰ΩúÊµÅ‰∏≠ÁöÑJSONÂìçÂ∫îÔºåÊèêÂèñÊåáÂÆöÂ≠óÊÆµ\n\
          \    ÂåÖÂê´ÈîôËØØÂ§ÑÁêÜÂíåÂ≠óÊÆµÁº∫Â§±ÁöÑÈªòËÆ§ÂÄºËÆæÁΩÆ\n    \"\"\"\n    try:\n        # Ëß£ÊûêJSONÂìçÂ∫î‰∏ª‰Ωì\n   \
          \     parsed = json.loads(body)\n        \n        # ÊèêÂèñÈ°∂Â±ÇÂ≠óÊÆµÔºàÂê´ÈîôËØØÂ§ÑÁêÜÔºâ\n   \
          \     input_data = {\n            \"q\": parsed.get(\"searchParameters\"\
          , {}).get(\"q\", \"\"),\n            \"total\": parsed.get(\"total\", 0),\n\
          \            \"podcasts\": []\n        }\n        \n        # ÈÅçÂéÜÊØè‰∏™Êí≠ÂÆ¢Êù°ÁõÆ\n\
          \        for podcast in parsed.get(\"podcasts\", []):\n            podcast_data\
          \ = {\n                \"title\": podcast.get(\"title\", \"\"),\n      \
          \          \"link\": podcast.get(\"link\", \"\"),\n                \"score\"\
          : podcast.get(\"score\", \"medium\"),  # ÈªòËÆ§mediumËØÑÂàÜ\n                \"\
          snippet\": podcast.get(\"snippet\", \"\"),\n                \"position\"\
          : podcast.get(\"position\", 0),\n                \"authors\": podcast.get(\"\
          authors\", []),    # ‰ΩúËÄÖÊòØÊï∞ÁªÑ\n                \"date\": podcast.get(\"date\"\
          , \"\"),\n                \"duration\": podcast.get(\"duration\", \"0\"\
          ),\n                # coverImageÂèØËÉΩ‰∏çÂ≠òÂú®ÔºåÊèê‰æõÈªòËÆ§Á©∫ÂÄº\n                \"coverImage\"\
          : podcast.get(\"coverImage\", \"\")  \n            }\n            input_data[\"\
          podcasts\"].append(podcast_data)\n        \n        # ËøîÂõûÁªü‰∏ÄÂëΩÂêçÁöÑËæìÂá∫ÂèòÈáè\n    \
          \    return {\"input_data\": input_data}\n    \n    except json.JSONDecodeError:\n\
          \        # JSONËß£ÊûêÂ§±Ë¥•Êó∂ËøîÂõûÈîôËØØ‰ø°ÊÅØ\n        return {\"input_data\": {\"error\":\
          \ \"Invalid JSON format\"}}\n    except Exception as e:\n        # ÈÄöÁî®ÈîôËØØÂ§ÑÁêÜ\n\
          \        return {\"input_data\": {\"error\": f\"Processing error: {str(e)}\"\
          }}"
        code_language: python3
        desc: ''
        outputs:
          input_data:
            children: null
            type: object
        selected: false
        title: ÁªìÊûúËß£Êûê
        type: code
        variables:
        - value_selector:
          - '17546253491010'
          - body
          variable: body
      height: 52
      id: '1754643102235'
      position:
        x: -740.424934191988
        y: -1514.2286015845405
      positionAbsolute:
        x: -740.424934191988
        y: -1514.2286015845405
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        code: "import json\n\ndef main(input_data: dict) -> dict:\n    \"\"\"\n  \
          \  ‰øÆÂ§çÁâàÔºöÂÖºÂÆπÂµåÂ•ó/ÈùûÂµåÂ•óËæìÂÖ•ÔºåÂº∫Âà∂ÂÆåÊï¥ËæìÂá∫\n    ËæìÂÖ•: Âê´videos/podcastsÂ≠óÊÆµÁöÑÂ≠óÂÖ∏ÔºàÊîØÊåÅ‰∏§ÁßçÁªìÊûÑÔºâ\n    ËæìÂá∫:\
          \ ÂÆåÊï¥MarkdownÂÜÖÂÆπÔºàÂº∫Âà∂ÂåÖÂê´markdownÈîÆÔºâ\n    \"\"\"\n    try:\n        # ÂÖºÂÆπ‰∏§ÁßçËæìÂÖ•ÁªìÊûÑ\n\
          \        data = input_data.get(\"input_data\", input_data)  # ÈÄÇÈÖçÂµåÂ•óÊàñÈùûÂµåÂ•ó\n\
          \        query = data.get(\"q\", \"Êú™Áü•ÊêúÁ¥¢ËØç\")\n        items = data.get(\"\
          videos\", data.get(\"podcasts\", []))  # ÂÖºÂÆπvideos/podcastsÂ≠óÊÆµ\n        \n\
          \        # ÊûÑÂª∫Âü∫Á°ÄMarkdown\n        md_content = f\"## \U0001F50D ÊêúÁ¥¢ËØç: {query}\\\
          n\\n\"\n        \n        # Â§ÑÁêÜÊù°ÁõÆÔºàÈò≤Âæ°ÊÄßÁºñÁ®ãÔºâ\n        for item in items:\n  \
          \          title = item.get(\"title\", \"Êó†Ê†áÈ¢ò\")\n            link = item.get(\"\
          link\", \"#\")\n            \n            # ÊûÑÂª∫Êù°ÁõÆÂÜÖÂÆπ\n            md_content\
          \ += f\"### \U0001F4FA {item.get('position', 0)}. [{title}]({link})\\n\"\
          \n            md_content += f\"- **‰ΩúËÄÖ**: {'„ÄÅ'.join(item.get('authors', ['Êú™Áü•']))}\\\
          n\"\n            md_content += f\"- **Êó•Êúü**: {item.get('date', 'Êú™Áü•')}\\n\"\
          \n            \n            # Â§ÑÁêÜÂèØËÉΩÁº∫Â§±ÁöÑÂ≠óÊÆµ\n            if \"duration\" in\
          \ item:\n                md_content += f\"- **Êó∂Èïø**: {item['duration']}Áßí\\\
          n\"\n            if snippet := item.get(\"snippet\", \"\"):\n          \
          \      md_content += f\"- **ÊëòË¶Å**: {snippet[:100]}{'...' if len(snippet)>100\
          \ else ''}\\n\"\n            if cover := item.get(\"coverImage\"):\n   \
          \             md_content += f\"- **Â∞ÅÈù¢**: ![ÂõæÁâá]({cover})\\n\"\n         \
          \   md_content += \"\\n\"\n        \n        return {\"markdown\": md_content}\n\
          \    \n    except Exception as e:\n        return {\"markdown\": f\"## ‚ö†Ô∏è\
          \ Â§ÑÁêÜÂºÇÂ∏∏\\n{str(e)}\"}"
        code_language: python3
        desc: ''
        outputs:
          markdown:
            children: null
            type: string
        selected: false
        title: josnËΩ¨md
        type: code
        variables:
        - value_selector:
          - '1754643102235'
          - input_data
          variable: input_data
      height: 52
      id: '1754643106088'
      position:
        x: -436.424934191988
        y: -1514.2286015845405
      positionAbsolute:
        x: -436.424934191988
        y: -1514.2286015845405
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1754642999884'
          - markdown
          variable: markdown
        selected: false
        title: ËßÜÈ¢ëÊêúÁ¥¢ÁªìÊûú
        type: end
      height: 88
      id: '1754644020839'
      position:
        x: -153.8062361503661
        y: -1699.0502454764078
      positionAbsolute:
        x: -153.8062361503661
        y: -1699.0502454764078
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1754643106088'
          - markdown
          variable: markdown
        selected: false
        title: ÂçöÂÆ¢ÊêúÁ¥¢ÁªìÊûú
        type: end
      height: 88
      id: '1754646053648'
      position:
        x: -153.8062361503661
        y: -1514.2286015845405
      positionAbsolute:
        x: -153.8062361503661
        y: -1514.2286015845405
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 242
    viewport:
      x: 715.160207408867
      y: 2225.7594670142516
      zoom: 0.7739450617033755
